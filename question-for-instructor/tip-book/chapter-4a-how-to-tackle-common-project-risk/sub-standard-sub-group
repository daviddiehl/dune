These questions are from:
Practical Tips for Software-Intensive Student Projects â€“ HTML version available at http://StudentProjectGuide.info


RISK
One sub-group might do an inferior job, bringing the whole team down at the end.


What are some examples of things, such as skills and commitment level, that will help us balance our sub-groups and reduce this risk?


What are the pros and cons of cross testing; sub-group A testing the code of sub-group B and vice-versa?
